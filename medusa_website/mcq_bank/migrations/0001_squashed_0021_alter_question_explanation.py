# Generated by Django 3.2.10 on 2021-12-26 06:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import martor.models
import re


class Migration(migrations.Migration):

    replaces = [('mcq_bank', '0001_initial'), ('mcq_bank', '0002_initial'), ('mcq_bank', '0003_auto_20210614_1038'), ('mcq_bank', '0004_auto_20210614_1321'), ('mcq_bank', '0005_alter_question_author'), ('mcq_bank', '0006_auto_20210614_2046'), ('mcq_bank', '0007_auto_20210628_1645'), ('mcq_bank', '0008_alter_question_text'), ('mcq_bank', '0009_alter_question_explanation'), ('mcq_bank', '0010_alter_question_category'), ('mcq_bank', '0011_auto_20210712_2214'), ('mcq_bank', '0012_auto_20210712_2226'), ('mcq_bank', '0013_alter_answer_explanation'), ('mcq_bank', '0014_alter_answer_text'), ('mcq_bank', '0015_auto_20210712_2313'), ('mcq_bank', '0016_alter_answer_question'), ('mcq_bank', '0017_auto_20210713_1514'), ('mcq_bank', '0018_auto_20210830_0953'), ('mcq_bank', '0019_auto_20210830_1742'), ('mcq_bank', '0020_question_flagged_message'), ('mcq_bank', '0021_alter_question_explanation')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Enter the answer text that you want displayed', max_length=1000, verbose_name='Text')),
                ('correct', models.BooleanField(default=False, help_text='Is this a correct answer?', verbose_name='Correct')),
                ('explanation', models.CharField(blank=True, help_text='Extra explanation for this answer', max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Enter the question text that you want displayed', unique=True, verbose_name='Question text')),
                ('explanation', martor.models.MartorField(blank=True, help_text='Explanation to be shown after the question has been answered', null=True, verbose_name='Explanation')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='mcq_bank.category', verbose_name='Category')),
                ('randomise_answer_order', models.BooleanField(default=True, help_text='If True (default), answers will be displayed in a random order each time', verbose_name='Randomise answer order?')),
                ('flagged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flagged_questions', to=settings.AUTH_USER_MODEL)),
                ('is_flagged', models.BooleanField(default=False, help_text='If True, has been flagged by a user')),
                ('is_reviewed', models.BooleanField(default=False, help_text='If True, has been reviewed by a staff or admin')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviewed_questions', to=settings.AUTH_USER_MODEL)),
                ('answer_image', models.ImageField(blank=True, help_text='Upload an image to be shown with the answers', null=True, upload_to='', verbose_name='Answer Image')),
                ('question_image', models.ImageField(blank=True, help_text='Upload an image to be shown in the question prompt', null=True, upload_to='', verbose_name='Question Image')),
                ('flagged_message', models.TextField(blank=True, help_text='Explanation for why the question was flagged.', null=True)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='QuizSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete', models.BooleanField(default=False, verbose_name='Complete')),
                ('started', models.DateTimeField(auto_now_add=True, verbose_name='Session Started')),
                ('finished', models.DateTimeField(blank=True, null=True, verbose_name='Session Ended')),
                ('answers', models.ManyToManyField(blank=True, related_name='quiz_sessions', to='mcq_bank.Answer')),
                ('questions', models.ManyToManyField(blank=True, related_name='quiz_sessions', to='mcq_bank.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quiz_sessions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('current_question_index', models.IntegerField(default=0, verbose_name='Index of the question currently being answered')),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='mcq_bank.question', verbose_name='Question'),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(max_length=1024, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Score')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User History',
                'verbose_name_plural': 'User progress records',
            },
        ),
        migrations.AlterField(
            model_name='answer',
            name='explanation',
            field=models.TextField(blank=True, help_text='Extra explanation for this answer', null=True),
        ),
        migrations.AlterField(
            model_name='answer',
            name='text',
            field=models.TextField(help_text='Enter the answer text that you want displayed', verbose_name='Text'),
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to='mcq_bank.answer')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to='mcq_bank.question')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
